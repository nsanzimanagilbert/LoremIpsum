extends base

block content
  main.main
    section.section.section-schedules
      .noShow   
        -var approver = user.firstName 
        -var approver2 = user.lastName 
        -var schApprover = `${approver} ${approver2}`      
        input(type="text" value=`${schedule.id}` id='schId')
        input(type="text" value=`${schApprover}` id='schApprover')

        
      .schedule-details.maxWd
        .sch-details.grid.grid-2  
          .sender-info.card-details.flex   
            .sender-info--heading.card-details--header
              h2 Sender Bio Data
            .sender-info--content.card-content.card-content--sender.flex   
              .sender-info--field.sender-img 
                .userImg
                  img(src=`../img/users/${schedule.sender.photo}`, alt="")
              .sender-info--field.grid-2 
                h3 Full name 
                p 
                  span #{schedule.sender.firstName} 
                  span 
                  span #{schedule.sender.lastName}
              .sender-info--field.grid-2 
                h3 Gender 
                if (schedule.sender.gender == 'Male')
                  p.gender.gender-male 
                    <i class='bx bx-male'></i> Male
                else if (schedule.sender.gender == 'Female')
                  p.gender.gender-female
                    <i class='bx bx-female'></i> Female
          
              .sender-info--field.grid-2 
                h3 Date of Birth  
                p #{schedule.sender.dob}
              .sender-info--field.grid-2 
                h3 Email 
                p #{schedule.sender.email}
              .sender-info--field.grid-2 
                h3 Phone
                p #{schedule.sender.phone}
              if (schedule.sender.student)
                .sender-info--field.grid-2 
                  h3 Institution
                  p #{schedule.sender.institution}
                .sender-info--field.grid-2 
                  h3 Course
                  p #{schedule.sender.course}
          .sch-info.card-details.flex 
            .sch-info--heading.card-details--header 
              h2 Appointment details 
            .sch-info--content.card-content.card-content--sch 
              .sch-info--field.grid  
                h3 <i class='bx bx-check-circle' ></i> Service 
                if (schedule.service == 'service-1')
                  p Stress management 
                else if (schedule.service == 'service-2')
                  p Grief and trauma management 
                else if (schedule.service == 'service-3')
                  p HIV management 
                else if (schedule.service == 'service-4')
                  p Fear, anxiety and depression 
                else if (schedule.service == 'service-5')
                  p Alcohol and drug addiction 
                else if (schedule.service == 'service-6')
                  p Mental health issues 
                else if (schedule.service == 'service-12')
                  p Other 
                  

              .sch-info--field.grid  
                h3 <i class='bx bx-calendar' ></i> Requested Date 
                p #{schedule.schDate}
              .sch-info--field.grid  
                h3 <i class='bx bx-time-five' ></i> Requested Time 
                p #{schedule.schTime}
              .sch-info--field.grid  
                h3 <i class='bx bxs-badge-check'></i> Meeting type  
                p #{schedule.schType}
              .sch-info--field.grid  
                h3 <i class='bx bx-phone' ></i> Follow up phone
                p #{schedule.schPhone}
              .sch-info--field.grid  
                h3 <i class='bx bx-download' ></i> Sent 
                p #{schedule.createdAt}
              if (!schedule.approved && schedule.assigned)
                .sch-info--field.grid
                  h3 <i class='bx bx-calendar' ></i> Set meeting date  
                  input(type="date" id="meetingDate" required)
                .sch-info--field.grid
                  h3 <i class='bx bx-time-five' ></i> Set meeting time 
                  input(type="time" id="meetingTime" required)
              if schedule.approved 
                .sch-info--field.grid
                  h3 <i class='bx bx-calendar' ></i> Meeting Date  
                  p #{schedule.meetingDate}
                .sch-info--field.grid
                  h3 <i class='bx bx-time-five' ></i> Meeting Time 
                  p #{schedule.meetingTime}
              if schedule.approved 
                .sch-info--field.grid  
                  h3 <i class='bx bx-loader-circle'></i> Done Sessions
                  if schedule.inProgress 
                    p #{schedule.doneSessions}
                  else
                    input(type="number" id="doneSessions")
                .sch-info--field.grid
                  h3 <i class='bx bx-loader-alt'></i> Remaining Sessions 
                  if schedule.inProgress 
                      p #{schedule.remainingSessions}
                  else 
                      input(type="number" id ="remainingSessions")
              if !schedule.approved 
                .sch-btns.flex
                  if !schedule.assigned   
                    button.btn.btn-sch.btn-sch--assign.flex <i class='bx bxs-like'></i> Assign Me
                  button.btn.btn-sch.btn-sch--assigning.flex.noShow(disabled) <i class='bx bxs-like'></i> Assigning...
                  if(schedule.assigned && !schedule.approved)
                    button.btn.btn-sch.btn-sch--setMeeting.flex <i class='bx bx-check-double'></i> Set meeting
              if schedule.approved 
                .sch-btns.flex  
                  button.btn.btn-sch.btn-sch--startMeeting.flex <i class='bx bx-video'></i> Open Meeting Room 
                  button.btn.btn-sch.btn-sch--startingMeeting.flex.noShow(disabled) <i class='bx bx-video'></i> Opening meeting... 

              else if schedule.completed  
                button(class='btn btn-sch' disabled) Completed



                       



